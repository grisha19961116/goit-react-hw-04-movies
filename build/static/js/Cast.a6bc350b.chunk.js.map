{"version":3,"sources":["components/Cast/Cast.jsx","components/Cast/Cast.module.css"],"names":["Cast","id","useState","dataFetchCast","setDataFetchCast","useEffect","a","baseUrl","api","getFullRequest","then","dataRequest","cast","getCastArray","length","console","error","getCastReqAsync","log","className","s","cast__list","map","profile_path","cast_id","character","name","cast__li","cast__img","alt","src","width","height","cast__h2","cast__3","module","exports"],"mappings":"0MAiDeA,UA7Cf,YAAuB,IAAPC,EAAM,EAANA,GAAM,EACsBC,mBAAS,IAD/B,mBACbC,EADa,KACEC,EADF,KAwBpB,OAtBAC,qBAAU,YACa,uCAAG,8BAAAC,EAAA,sEAEdC,EAFc,6CAEkCN,EAFlC,6EAGOO,IACxBC,eAAeF,GACfG,MAAK,SAAAC,GACJ,OAAOA,EAAYC,QANH,UASC,QANfC,EAHc,SASiC,IAAxBA,EAAaC,OATtB,iDAapBV,EAAiBS,GAbG,kDAepBE,QAAQC,MAAR,MAfoB,0DAAH,qDAkBrBC,KACC,CAAChB,IACJc,QAAQG,IAAIf,EAAZ,QAEE,oBAAIgB,UAAWC,IAAEC,WAAjB,SACGlB,GACCA,EAAcmB,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KACrD,OACE,qBAAIP,UAAWC,IAAEO,SAAjB,UACE,qBACER,UAAWC,IAAEQ,UACbC,IAAKH,EACLI,IAAG,yCAAoCP,GACvCQ,MAAM,QACNC,OAAO,UAET,oBAAIb,UAAWC,IAAEa,SAAjB,SAA4BP,IAC5B,qBAAIP,UAAWC,IAAEc,QAAjB,yBAAuCT,OATTD,U,mBChC5CW,EAAOC,QAAU,CAAC,WAAa,yBAAyB,SAAW,uBAAuB,UAAY,wBAAwB,SAAW,uBAAuB,QAAU","file":"static/js/Cast.a6bc350b.chunk.js","sourcesContent":["import s from './Cast.module.css';\nimport api from '../../API/api';\nimport { useEffect, useState } from 'react';\nimport Navigation from '../Navigation/Navigation';\nfunction Cast({ id }) {\n  const [dataFetchCast, setDataFetchCast] = useState([]);\n  useEffect(() => {\n    const getCastReqAsync = async () => {\n      try {\n        const baseUrl = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=78f2432cb0b978404715fbeff43c36be&language=en-US`;\n        const getCastArray = await api\n          .getFullRequest(baseUrl)\n          .then(dataRequest => {\n            return dataRequest.cast;\n          });\n\n        if (getCastArray === null || getCastArray.length === 0) {\n          return;\n        }\n\n        setDataFetchCast(getCastArray);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getCastReqAsync();\n  }, [id]);\n  console.log(dataFetchCast, `Cast`);\n  return (\n    <ul className={s.cast__list}>\n      {dataFetchCast &&\n        dataFetchCast.map(({ profile_path, cast_id, character, name }) => {\n          return (\n            <li className={s.cast__li} key={cast_id}>\n              <img\n                className={s.cast__img}\n                alt={name}\n                src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                width=\"300px\"\n                height=\"200px\"\n              />\n              <h2 className={s.cast__h2}>{name}</h2>\n              <h3 className={s.cast__3}>Character : {character}</h3>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cast__list\":\"Cast_cast__list__3a0z_\",\"cast__li\":\"Cast_cast__li__2pu69\",\"cast__img\":\"Cast_cast__img__LJcCO\",\"cast__h2\":\"Cast_cast__h2__1lUxc\",\"cast__3\":\"Cast_cast__3__3Yi4W\"};"],"sourceRoot":""}